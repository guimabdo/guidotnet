name: $(Build.SourceBranch)$(rev:.r)
trigger:
  - releases/*
steps:
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      #Obtem a build number, que contém o nome da branch
      $v = ($env:BUILD_BUILDNUMBER)
      #substitui o que não interessa
      $v = $v.replace('refs_', '')
      $v = $v.replace('heads_', '')
      $v = $v.replace('releases_','')
      #se o resultado não está no padrão X.X.X, adiciono 0.0.0 a frente
      if(!($s -match '^\d+\.\d+\.\d+')){
        $v = '0.0.0-' + $v
      }
      echo "##vso[task.setvariable variable=version;isOutput=true]$v"
      echo 'version has been set $v'
  name: 'SetVersionStep'
  displayName: 'Determinando versão'
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      (Get-Content ./package.json) | ForEach-Object { $_ -replace "0.0.0", "$(SetVersionStep.version)" } | Set-Content ./package.json
      (Get-Content ./index.js) | ForEach-Object { $_ -replace "0.0.0", "$(SetVersionStep.version)" } | Set-Content ./index.js
  displayName: 'Alterando versão no package.json e no index.js'
- task: Npm@1
  inputs:
    command: 'install'
- task: Npm@1
  inputs:
    command: 'custom'
    customCommand: 'publish --access public'
    publishEndpoint: 'npm - guimabdo'